{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "List of all holdings",
    "description" : "Retrieves all the Holdings",
    "version" : "v4.0.0"
  },
  "servers" : [ {
    "url" : "http://api.temenos.com/api/v4.0.0/"
  }, {
    "url" : "https://api.temenos.com/api/v4.0.0/"
  } ],
  "security" : [ {
    "basicAuth" : [ ]
  }, {
    "apiKey" : [ ]
  } ],
  "tags" : [ {
    "name" : "RETAIL"
  } ],
  "paths" : {
    "/holdings/customers/{customerId}/holdings" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves the list of customer accounts",
        "description" : "Retrieves the list of customer holdings",
        "operationId" : "getCustomerHoldings",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Identifier of the customer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "holdingsType",
          "in" : "query",
          "description" : "Contains the types of customer holdings",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "holdingsId",
          "in" : "query",
          "description" : "Contains the identifier specific to the holding details of the customer",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "getPreferredHoldings",
          "in" : "query",
          "description" : "Flag to fetch the preferred holding details (JWT required)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageSize"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageStart"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "pageToken"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "CustomerHoldingsResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerHoldingsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessQueryErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemQueryErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/holdings/" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves the list of product(Current/Saving/Loan/Deposit) details",
        "description" : "Retrieves the list of customer holdings details, such as AA Accounts, loans and deposits.",
        "operationId" : "getHoldings",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "query",
          "description" : "Identifier of the customer",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "holdingsType",
          "in" : "query",
          "description" : "Contains the types of customer holdings",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "holdingsId",
          "in" : "query",
          "description" : "Contains the identifier specific to the holding details of the customer",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "getPreferredHoldings",
          "in" : "query",
          "description" : "Flag to fetch the preferred holding details (JWT required)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageSize"
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "pageStart"
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          },
          "x-ballerina-name" : "pageToken"
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "HoldingsResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerHoldingsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessQueryErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemQueryErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "CustomerHoldingsResponseBodyInner" : {
        "type" : "object",
        "properties" : {
          "totalExtAccountBalances" : {
            "type" : "string",
            "description" : "Contains the final balances of all the external accounts"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extension data"
          },
          "totalDepositBalances" : {
            "type" : "number",
            "description" : "Contains the final balances of all deposit accounts after all transactions have taken place"
          },
          "totalAccountBalances" : {
            "type" : "number",
            "description" : "Contains the final balances of all accounts after all transactions have taken place"
          },
          "totalLoanBalances" : {
            "type" : "number",
            "description" : "Contains the final balances of all loans after all payments have taken place"
          },
          "products" : {
            "type" : "array",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account",
            "items" : {
              "type" : "object",
              "properties" : {
                "productLineName" : {
                  "type" : "string",
                  "description" : "Description of the product line, e.g. Client Consent for product line CONSENT."
                },
                "arrangementId" : {
                  "type" : "string",
                  "description" : "Indicates an unique identifier of an account"
                },
                "productGroupId" : {
                  "type" : "string",
                  "description" : "The group, as defined by the institution, that the product belongs to."
                },
                "productGroupName" : {
                  "type" : "string",
                  "description" : "Description of the product group"
                },
                "productId" : {
                  "type" : "string",
                  "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account."
                },
                "productDescription" : {
                  "type" : "string",
                  "description" : "Indicates the description of the Product"
                },
                "accountId" : {
                  "type" : "string",
                  "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN"
                },
                "shortTitle" : {
                  "type" : "string",
                  "description" : "Contains the short title given to the name of an account or an arrangement"
                },
                "categoryId" : {
                  "type" : "string",
                  "description" : "Unique identifier associated with the product name of the account or contract. For example: For customer/counterparty accounts, the identifier would be in the range 1000 to 9999. For ledger accounts, in the range 10000 to 19999."
                },
                "companyCode" : {
                  "type" : "string",
                  "description" : "The identifier of the underlying Entity/Company/Branch."
                },
                "currencyId" : {
                  "type" : "string",
                  "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency."
                },
                "sortCode" : {
                  "type" : "string",
                  "description" : "Contains bank sort code or iban branch identifier for the account"
                },
                "accountIBAN" : {
                  "type" : "string",
                  "description" : "Represents the International Bank Account Number (IBAN) of the account.  E.g. GB29 NWBK 6016 1331 9268 19"
                },
                "workingBalance" : {
                  "type" : "number",
                  "description" : "Real-time balance including all authorised transactions posted against the account and, unless it is a nostro or internal account, unauthorised debit entries."
                },
                "openingDate" : {
                  "type" : "string",
                  "description" : "Date on which the credit facility application is opened",
                  "format" : "date"
                },
                "companyName" : {
                  "type" : "string",
                  "description" : "The company in which payment is processed"
                },
                "preferredProduct" : {
                  "type" : "string",
                  "description" : "Indicates the preferred product of the arrangement contract. This is required for only new arrangements and product change is not permitted"
                },
                "preferredProductPosition" : {
                  "type" : "string",
                  "description" : "Indicates to position of the preferred product of the arrangement contract. This is required for only new arrangements and product change is not permitted"
                },
                "preferredProductLabel" : {
                  "type" : "string",
                  "description" : "Indicates the label of the Preferred Product of the Arrangement contract. This is required for only new arrangements and product change is not permitted"
                },
                "permission" : {
                  "type" : "string",
                  "description" : "The act of permitting, especially in giving formal consent to access a particular file or repository."
                },
                "onlineActualBalance" : {
                  "type" : "number",
                  "description" : "Real-time balance including all authorised transactions posted against the account, excluding any entries with a future processing date."
                },
                "availableBalance" : {
                  "type" : "number",
                  "description" : "Available balance of the account which is the projected balance which includes the net movements of both debits and credits against the account."
                },
                "availableBalanceWithLimit" : {
                  "type" : "number",
                  "description" : "Contains the maximum amount available to be drawn"
                },
                "outstandingAmount" : {
                  "type" : "number",
                  "description" : "Contains the aggregate outstanding principal amount thereof after giving effect to any borrowings and prepayments or repayments of Committed Loans"
                },
                "paidOutAmount" : {
                  "type" : "number",
                  "description" : "The amount paid out."
                },
                "arrangementStatus" : {
                  "type" : "string",
                  "description" : "Status of the arrangement. E.g. AUTH, CLOSE, UNAUTH etc."
                },
                "totalPrincipal" : {
                  "type" : "number",
                  "description" : "Contains the amount borrowed or the part of the amount borrowed which remains unpaid"
                },
                "customerReference" : {
                  "type" : "string",
                  "description" : "The reference which is provided to the beneficiary/ creditor by the originator of payment"
                },
                "statement" : {
                  "type" : "string",
                  "description" : "Contains the details of account statement first cycle. It includes addon, participant account, lead account, print type, print attribute name, print attribute value, etc."
                },
                "portfolioId" : {
                  "type" : "string",
                  "description" : "Id of the portfolio or security account"
                },
                "masterArrangementId" : {
                  "type" : "string",
                  "description" : "The unique identifier to specify an arrangement reference which is act as a Master for the arrangement being created."
                },
                "subAccount" : {
                  "type" : "string",
                  "description" : "The sub-account that the security position is held in."
                },
                "limitReference" : {
                  "type" : "string",
                  "description" : "Identifies the credit limit reference for the underlying account."
                },
                "dormancyStatus" : {
                  "type" : "string",
                  "description" : "Specifies the operative status of the acount like inactive, dormant,unclaimed etc.,"
                },
                "productAttribute" : {
                  "type" : "string",
                  "description" : "Used to define the attributes needed for product creation. For example, line Of business, organisation and branch, etc"
                },
                "connectionId" : {
                  "type" : "string",
                  "description" : "Contains the id associated to the connect reference respective to a transaction of the account"
                },
                "balancesLastUpdated" : {
                  "type" : "string",
                  "description" : "Contains the last updated balances details"
                },
                "transactionsLastUpdated" : {
                  "type" : "string",
                  "description" : "Contains the list of last updated transactions"
                },
                "bankLogo" : {
                  "type" : "string",
                  "description" : "Indicates the logo of the bank"
                },
                "extSourceProvider" : {
                  "type" : "string",
                  "description" : "Contains the name of the external source provider for the customer"
                },
                "customerId" : {
                  "type" : "string",
                  "description" : "Identifier of the customer"
                },
                "connectionStatus" : {
                  "type" : "string",
                  "description" : "Contains the connection status of the transaction"
                },
                "connectionSubStatus" : {
                  "type" : "string",
                  "description" : "Contains the connection sub status of the transaction"
                },
                "nextRefreshAvailableAt" : {
                  "type" : "string",
                  "description" : "Denotes the next refresh time"
                },
                "acctSwiftRef" : {
                  "type" : "string",
                  "description" : "Contains the swift reference of the account"
                },
                "extAccountNumber" : {
                  "type" : "string",
                  "description" : "Denotes the external account number"
                },
                "availableFunds" : {
                  "type" : "string",
                  "description" : "Total funds available in the account after all the ongoing transactions have been completed"
                },
                "customerIds" : {
                  "type" : "array",
                  "description" : "Identifier of the customer",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "customerId" : {
                        "maxLength" : 100,
                        "type" : "string",
                        "description" : "Identifier of the customer"
                      },
                      "customerRole" : {
                        "type" : "string",
                        "description" : "Indicates role of a customer for an arrangement."
                      },
                      "roleDisplayName" : {
                        "type" : "string",
                        "description" : "Indicates the type of role of a customer"
                      },
                      "beneficialOwner" : {
                        "type" : "string",
                        "description" : "Indicates the customer who is the legal owner of the arrangement and is the responsible customer of the contract with bank."
                      }
                    }
                  }
                },
                "paymentTemplates" : {
                  "type" : "array",
                  "description" : "Contains the templates used for payment transactions",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "paymentTemplate" : {
                        "type" : "string",
                        "description" : "Contains the template used for payment transactions"
                      }
                    }
                  }
                }
              }
            }
          },
          "productLineId" : {
            "type" : "string",
            "description" : "The top level product line, which the product is ultimately attached to. May be a Temenos-defined product line such as ACCOUNTS, AGENT, BUNDLE, CONSENT, DEPOSITS, LENDING, REWARDS, etc. or one defined by the institution to manage external products"
          }
        }
      },
      "ErrorHeader" : {
        "type" : "object",
        "properties" : {
          "audit" : {
            "$ref" : "#/components/schemas/QueryHeaderAudit"
          },
          "status" : {
            "type" : "string",
            "description" : "Status of the API(success/failed)"
          }
        }
      },
      "QueryHeaderAudit" : {
        "type" : "object",
        "properties" : {
          "T24_time" : {
            "type" : "integer",
            "description" : "Time taken to response by Transact",
            "format" : "int32",
            "x-ballerina-name" : "t24Time"
          },
          "responseParse_time" : {
            "type" : "number",
            "description" : "Time taken to parse the response by IRIS",
            "x-ballerina-name" : "responseParseTime"
          },
          "versionNumber" : {
            "type" : "string",
            "description" : "The CURR.NO. of the record"
          },
          "requestParse_time" : {
            "type" : "number",
            "description" : "Time taken to parse the request by IRIS",
            "x-ballerina-name" : "requestParseTime"
          }
        }
      },
      "SystemQueryErrorResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ErrorHeader"
          },
          "error" : {
            "$ref" : "#/components/schemas/SystemQueryErrorResponseBody"
          }
        },
        "description" : "SystemQueryErrorResponse"
      },
      "BusinessQueryErrorResponseBody" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "The identifier of the error message"
          },
          "message" : {
            "type" : "string",
            "description" : "The actual Transact error message for bad requests"
          },
          "type" : {
            "type" : "string",
            "description" : "The identifier of error type: Business"
          }
        }
      },
      "QueryErrorResponseBody" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "The identifier of the error message"
          },
          "message" : {
            "type" : "string",
            "description" : "The actual Transact error message "
          },
          "type" : {
            "type" : "string",
            "description" : "The identifier of error type: "
          }
        }
      },
      "CustomerHoldingsResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/QueryHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CustomerHoldingsResponseBody"
          }
        },
        "description" : "CustomerHoldingsResponse"
      },
      "QueryErrorResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ErrorHeader"
          },
          "error" : {
            "$ref" : "#/components/schemas/QueryErrorResponseBody"
          }
        },
        "description" : "QueryErrorResponse"
      },
      "QueryHeader" : {
        "type" : "object",
        "properties" : {
          "audit" : {
            "$ref" : "#/components/schemas/QueryHeaderAudit"
          },
          "page_start" : {
            "type" : "integer",
            "description" : "The record from which the response should be displayed",
            "format" : "int32",
            "x-ballerina-name" : "pageStart"
          },
          "total_size" : {
            "type" : "integer",
            "description" : "The total number of records present",
            "format" : "int32",
            "x-ballerina-name" : "totalSize"
          },
          "page_token" : {
            "type" : "string",
            "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
            "x-ballerina-name" : "pageToken"
          },
          "status" : {
            "type" : "string",
            "description" : "Status of the API(success/failed)"
          },
          "page_size" : {
            "type" : "integer",
            "description" : "The total number of records per page",
            "format" : "int32",
            "x-ballerina-name" : "pageSize"
          }
        }
      },
      "CustomerHoldingsResponseBody" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/CustomerHoldingsResponseBodyInner"
        }
      },
      "BusinessQueryErrorResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ErrorHeader"
          },
          "error" : {
            "$ref" : "#/components/schemas/BusinessQueryErrorResponseBody"
          }
        },
        "description" : "BusinessQueryErrorResponse"
      },
      "SystemQueryErrorResponseBody" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "The identifier of the error message"
          },
          "message" : {
            "type" : "string",
            "description" : "The actual Transact error message caused by server"
          },
          "type" : {
            "type" : "string",
            "description" : "The identifier of error type: System"
          }
        }
      }
    },
    "securitySchemes" : {
      "basicAuth" : {
        "type" : "http",
        "scheme" : "basic"
      },
      "apiKey" : {
        "type" : "apiKey",
        "name" : "Authorization",
        "in" : "header",
        "x-ballerina-name" : "authorization"
      }
    }
  },
  "x-original-swagger-version" : "2.0"
}